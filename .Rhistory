getwd()
setwd(".Generator")
setwd("./Generator")
getwd()
setwd("/home/storeddocumentsonline")
devtools::install("pytools")
setwd("home/storeddocumentsonline/pytools")
setwd("/home/storeddocumentsonline/pytools")
?Generator
library(pytools)
?Generator
?Generator.R
?pytools::Generator
range(3,4)
range(3,6)
pytools::range(4,5)
?pytools
library(pytools)
eval "$(ssh-agent -s)"
eval "$(ssh-agent -s)"
setwd("./set_builder")
setwd("./pytools")
setwd("/homes/storeddocumentsonline/pytools")
setwd("/home/storeddocumentsonline/pytools")
document()
devtools::document()
library(pytools)
pytools::range(2,4)
devtools::install("pytools")
devtools::create("pytools")
setwd("/home/storeddocumentsonline")
devtools::create("pytools")
setwd("/home/storeddocumentsonline/pytools")
setwd("/home/storeddocumentsonline")
devtools::install("pytools")
pytools::range(3,5)
devtools::create("pytools")
setwd("/home/storeddocumentsonline/pytools")
document()
devtools::document()
setwd("..")
devtools::install("pytools")
library(pytools)
range(2,4)
setwd("/home/storeddocumentsonline/pytools")
devtools::create("pytools")
setwd("..")
devtools::create("pytools")
devtools::document()
devtools::create("pytools")
setwd("..")
devtools::create("pytools")
getwd()
document()
devtools::document()
setwd(..)
setwd("..")
devtools::create()
devtools::create("pytools")
getwd()
setwd("/home/storeddocumentsonline")
devtools::create("pytools")
library(pytools)
pytools::range
library(pytools)
pytools::range(1,4)
?Generator
?range
?pytools
?is_generator
?is_Generator
?string
?stringr
x <- "hi"
x[1]
??stringr
library(stringr)
?logical
is_palindrome <- function(x) {
for (i in 1:length(x)) {
x <- logical(length = length(x), 0)
if (substring(x, i, i) == substring(x, -i, -i)) x <- 1
}
return all(x)
}
source('~/.active-rstudio-document')
is_palindrome("racecar")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
is_palindrome("racecar")
substring("racecar", 1, 1)
substring("racecar", -1, -1)
source('~/.active-rstudio-document')
is_palindrome("racecar")
source('~/.active-rstudio-document')
is_palindrome("racecar")
is_palindrome("zephyr")
substring("zephyr", 1, 1)
substring("zephyr", 7-1, 7-1)
x <- logical(length = 7)
x
source('~/.active-rstudio-document')
is_palindrome("zephyr")
l <- 6
x <- "zephyr"
for (i in 1:l) {
x <- logical(length = l)
if (substring(x, i, i) == substring(x, (l+1) - i, (l+1) - i)) x[i] <- T
}
source('~/.active-rstudio-document')
is_palindrome("zephyr")
?all
source('~/.active-rstudio-document')
is_palindrome("zephyr")
x <- "zephyr"
l <- length(x)
l <- nchar(x)
for (i in 1:l) {
trues <- logical(length = l)
if (substring(x, i, i) == substring(x, (l+1) - i, (l+1) - i)) trues[i] <- T
}
return(all(trues))
source('~/.active-rstudio-document')
is_palindrome("zephyr")
is_palindrome("racecar")
x <- "racecar"
x <- "racecar"
l <- nchar(x)
for (i in 1:l) {
trues <- logical(length = l)
if (substring(x, i, i) == substring(x, (l+1) - i, (l+1) - i)) trues[i] <- T
}
source('~/.active-rstudio-document')
x <- "racecar"
l <- nchar(x)
trues <- logical(length = l)
for (i in 1:l) {
if (substring(x, i, i) == substring(x, (l+1) - i, (l+1) - i)) trues[i] <- T
}
trues
source('~/.active-rstudio-document')
is_palindrome("racecar")
is_palindrome("zephyr")
is_palindrome("go hang a salami im a lasagna hog")
is_palindrome("gohangasalamiimalasagnahog")
source('~/.active-rstudio-document')
is_palindrome("go hang a salami im a lasagna hog")
source('~/.active-rstudio-document')
is_palindrome("go hang a salami I'm a lasagna hog")
x <- x %>%
stringr::str_remove_all(c(" ", "'", ".")) %>%
stringr::str_to_lower()
?str_remove_all
x <- racecar
x <- 'racecar'
x <- x %>%
stringr::str_remove_all([" |.|,|'") %>%
stringr::str_to_lower()
l <- nchar(x)
trues <- logical(length = l)
for (i in 1:l) {
if (substring(x, i, i) == substring(x, (l+1) - i, (l+1) - i)) trues[i] <- T
}
return(all(trues))
}
x <- x %>%
stringr::str_remove_all(" |.|,|'") %>%
stringr::str_to_lower()
x <- "racecar"
x <- x %>%
stringr::str_remove_all(" |.|,|'") %>%
stringr::str_to_lower()
x <- "racecar"
x <- x %>%
stringr::str_remove_all("[\s|'|.|,]") %>%
stringr::str_to_lower()
x <- "my n'ame,"
x <-  stringr::str_remove_all("[\s|'|.|,]")
x <-  stringr::str_remove_all("[[:space:]|'|.|,]")
x <-  stringr::str_remove_all(x,"[[:space:]|'|.|,]")
source('~/.active-rstudio-document')
is_palindrome("Go hang a salami. I'm a lasagna hog.")
x <- "my n'ame"
x <-  stringr::str_remove_all(x, "[^[:alpha:]]")
source('~/.active-rstudio-document')
is_palindrome("Go hang a salami. I'm a lasagna hog!")
source('~/pytools/R/mypal.R')
is_palindrome(3443)
is.palindrome(34.43)
is_palindrome(34.43)
is_palindrome(344.3)
library(pytools)
expr <- "if (i == 0) {
n0 <- 0;
n1 <- 0;
n <- n0 + n1; };
if (i == 1) {
n0 <- 0; n1 <- 1;
n <- n0 + n1;
};
if (i > 1) {
n <- n0 + n1;
a <- n1;
b <- n0 + n1;
n0 <- a;
n1 <- b;
};
i <- i + 1;"
gen <- Generator(result = expr,
current = c(i = 0,
a = 0,
b = 0,
n0 = 0,
n1 = 0,
n = 0),
yield = n)
next_one(gen)
library(pytools)
next_one(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
yield_next(gen)
devtools::install_github("jacgoldsm/pytools")
library(pytools)
g1 <- Generator("x+4", current = c(x = 0), yield = x)
yield_next(g1)
yield_next(g1)
yield_next(g1)
View(yield_next)
View(g1)
devtools::install_github("jacgoldsm/pytools")
library(pytools)
g1 <- Generator("x+4", current = c(x = 0), yield = x)
yield_next(g1)
yield_next(g1)
yield_next(g1)
yield_next(g1)
View(gen)
g1 <- Generator("x <- x+4", current = c(x = 0), yield = x)
yield_next(g1)
yield_next(g1)
yield_next(g1)
yield_next(g1)
yield_next(g1)
?yield_next
?yield_next
?Generator
source('~/pytools/R/range.R')
library(pytools)
?yield_next
library(pytools)
?yield_next
devtools::document()
library(pytools)
?range
?yield_next
?Generator
devtools::document()
library(pytools)
?Generator
that_for_all <- function(set1, set2) {
set2 <- rlang::enexpr(set2)
structure(list(set1,set2, 'all'), class = "that_for_all")
}
1:10 %>% that_for_all(1:5)
devtools::document()
library(pytools)
?that_for_all
devtools::document()
library(pytools)
?we_have
?that_for_all
?roxygen2
library(roxygen2)
?roxygen2
vignette("rd", package = "roxygen2")
devtools::document()
library(pytools)
?that_for_all
devtools::document()
?rdname
devtools::document()
devtools::document()
library(pytools)
?we_have
devtools::document()
devtools::document()
library(pytools)
?we_have
devtools::document()
library(pytools)
?we_have
devtools::install_github("jacgoldsm/pytools")
library(pytools)
1:10 %>% that_for_all(1:5) %>% we_have(~.x %% .y != 0)
devtools::document()
library(pytools)
devtools::install_github("jacgoldsm/pytools")
library(pytools)
2:100 %>% that_for_all(range(2,x)) %>% we_have(~.x %% .y != 0)
?we_have
?pytools
library(pytools)
?pytools
vignette("rd")
?Generator
?pytools::yield_next
library(pytools)
?Generator
library(pytools)
library(pytools)
?Generator
getwd()
devtools::document()
library(pytools)
?Generator
devtools::document()
library(pytools)
